name: CI with Custom MySQL

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start MySQL container
        run: |
          docker run -d \
            --name mysql-test \
            -e MYSQL_DATABASE=test \
            -e MYSQL_ROOT_PASSWORD=pwroot \
            -e MYSQL_USER=test \
            -e MYSQL_PASSWORD=pwtest \
            -p 3800:3306 \
            mysql:8.0 \
            --default-authentication-plugin=mysql_native_password
      - name: Wait for MySQL to be ready
        run: |
          until docker exec mysql-test \
            mysqladmin ping -h127.0.0.1 \
            --silent --user=root --password=pwroot; do
            sleep 1
          done

      - name: Seed sample table & data
        run: |
          docker exec mysql-test mysql \
            --user=root --password=pwroot \
            --database=test \
            -e "
              CREATE TABLE IF NOT EXISTS sample (
                id INT AUTO_INCREMENT PRIMARY KEY,
                name VARCHAR(50) NOT NULL
              );
              INSERT INTO sample (name) VALUES
                ('Alice'),('Bob'),('Charlie')
              ON DUPLICATE KEY UPDATE name=name;
            "

      - name: Verify sample data
        run: |
          docker exec mysql-test mysql \
            --user=test --password=pwtest \
            --database=test \
            -e "
              SHOW TABLES;
              SELECT COUNT(*) AS total FROM sample;
            "

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install mysql2

      - name: Run sample DB reader
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3800
          DB_USER: test
          DB_PASSWORD: pwtest
          DB_NAME: test
        run: node page/read-db.js

      - name: Commit results.json back to repo
        run: |
          # Git 사용자 정보 설정
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
        
          # 변경사항이 있을 때만 커밋 & 푸시
          git add results.json
          if ! git diff --cached --quiet; then
            git commit -m "chore: update results.json (자동 생성)"
            git push origin HEAD:main
          else
            echo "No changes to commit"
          fi
